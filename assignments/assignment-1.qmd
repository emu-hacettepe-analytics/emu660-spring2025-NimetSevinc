---
title: "Assignment 1"
---

# Assignment 1

My first assignment has three parts.

## (a) A Brief Summary about "Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler - Cem Vardar&Erdi Daşdemir"

Cem Vardar mentioned the role of industrial engineering in problem-solving processes within complex systems, emphasizing that even complex problems can be solved by starting from simple ones. He stated that data science is a tool in problem-solving, particularly used in improving complex systems. He highlighted the importance of soft skills such as analytical thinking, problem-solving, curiosity, and the ability to establish cause-and-effect relationships. As for technical skills, he stated that probability, statistics, programming, data collection, processing, and visualization are fundamental, and the ability to model develops when it is specialized in the business context.

Lastly, he provided the following advice: he emphasized the importance of learning general skills such as problem-solving, working with data, understanding data, taking a holistic approach, and thinking multidimensionally, as well as the ability to learn. He suggested focusing on the problem rather than the tools, the significance of mental models, the Pareto principle, approaching problems through inversion, understanding game theory, and the value of readings.


## (b) Statistical Summaries with Custom Functions and Iteration Methods

\

```{r}
data(mtcars)

compute_stats <- function(x) {
  list<- (c(mean = mean(x), median = median(x), var = var(x), IQR = IQR(x), min = min(x), max = max(x)))
}
for (col in names(mtcars)) {
  cat("Column_name:", col, "\n")
  print(compute_stats(mtcars[[col]]))
}
```

```{r}
#Alternative approach with "sapply"
sapply(mtcars,compute_stats)
```

```{r}
#Alternative approach with "apply"
apply(mtcars,MARGIN=2,FUN=compute_stats)

```

## (c) Displaying and Handling the "na_example" Dataset

```{r}

library(dslabs)
data(na_example)


str(na_example)
```

```{r}
NA_count <- sum(is.na(na_example))
cat("Total Number of NAs:", NA_count)

NA_index_pos <- which(is.na(na_example))
cat("Index positions of NAs:", NA_index_pos) 
```

```{r}
cat("Mean:", mean(na_example,na.rm=TRUE), "Std_dev:", sd(na_example,na.rm=TRUE))
```

```{r}
replace_median <- ifelse(is.na(na_example), median(na_example, na.rm = TRUE), na_example)
cat("version 1 (replaced with median):","\n","Mean:", mean(replace_median), "Std_dev:", sd(replace_median))
```

```{r}
replace_random<- ifelse(is.na(na_example), sample(na_example[!is.na(na_example)],replace = TRUE), na_example)
cat("version 2 (replaced with random_v):","\n","Mean:", mean(replace_random),"Std_dev:", sd(replace_random))
```

The median replacement method is better because it is not affected by outliers and keeps the dataset stable. Random replacement adds variability, which can distort the data.

\`\`\`{r}
