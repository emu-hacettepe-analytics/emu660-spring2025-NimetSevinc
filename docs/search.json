[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello!! My name is Nimet Nur Sevinç\nThis is my personal webpage. 🔹\nPlease stay tuned to follow my works on data analytics, blog posts, and more..\n\n\n\n\n Back to top"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project X",
    "section": "",
    "text": "&lt;div style= “display: flex"
  },
  {
    "objectID": "project.html#data-source",
    "href": "project.html#data-source",
    "title": "Sustainability Goals in Türkiye: Energy, Emissions, and the Future",
    "section": "2.1 Data Source",
    "text": "2.1 Data Source\n\nSera Gazı Emisyon İstatistikleri\nGayri Safi Yurtiçi Hasıla ve Kişi Başına Gayri Safi Yurtiçi Hasıla\nIEA Türkiye Enerji İstatistikleri\nIEA Enerji Kaynaklı Emisyonlar\nIEA Elektrik Üretim ve Tüketim Verileri\nIEA Türkiye Yenilenebilir Enerji Kaynakları Verisi"
  },
  {
    "objectID": "project.html#general-information-about-data",
    "href": "project.html#general-information-about-data",
    "title": "Sustainability Goals in Türkiye: Energy, Emissions, and the Future",
    "section": "2.2 General Information About Data",
    "text": "2.2 General Information About Data\nThe data obtained from TÜİK provide information on the sectoral distribution of carbon emissions in Türkiye over the years, as well as GDP figures necessary for calculating energy intensity. Additionally, the data gathered from the IEA include Türkiye’s total primary energy supply, annual energy amounts by source, energy-related carbon emissions, the carbon intensity of the energy mix, per capita carbon emissions, electricity generation and consumption figures, and the share of renewable energy sources in electricity generation."
  },
  {
    "objectID": "project.html#reason-of-choice",
    "href": "project.html#reason-of-choice",
    "title": "Sustainability Goals in Türkiye: Energy, Emissions, and the Future",
    "section": "2.3 Reason of Choice",
    "text": "2.3 Reason of Choice\nThis study has been selected with the aim of contributing to sustainable development goals in line with energy and climate policies.\nIn order to shed light on the extent to which carbon-free growth is achievable and how Turkey’s trends over the years align with these goals, this topic has been chosen from the perspectives of energy, environment, and society, particularly given that energy-related emissions constitute a major portion of global warming.\nRaising awareness on this issue is also one of the primary motivations behind the study."
  },
  {
    "objectID": "project.html#preprocessing",
    "href": "project.html#preprocessing",
    "title": "Sustainability Goals in Türkiye: Energy, Emissions, and the Future",
    "section": "2.4 Preprocessing",
    "text": "2.4 Preprocessing\nEmissions.RData\n\n\nCode\nlibrary(readr)\n\n\nWarning: package 'readr' was built under R version 4.4.3\n\n\nCode\nlibrary(readxl)\n\n\nWarning: package 'readxl' was built under R version 4.4.3\n\n\nCode\nlibrary(dplyr)\n\n\nWarning: package 'dplyr' was built under R version 4.4.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nCo2_emissions_by_sector &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - CO2 emissions by sector in Türkiye.csv\") |&gt; rename(\"CO2 emissions by sector\" = \"CO2 emissions by sector in Türkiye\")\n\n\nRows: 207 Columns: 4\n\n\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): CO2 emissions by sector in Türkiye, Units\ndbl (2): Value, Year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(Co2_emissions_by_sector)\n\n\nspc_tbl_ [207 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ CO2 emissions by sector: chr [1:207] \"Electricity and heat producers\" \"Electricity and heat producers\" \"Electricity and heat producers\" \"Electricity and heat producers\" ...\n $ Value                  : num [1:207] 68.4 69.8 64.5 65.5 66.6 ...\n $ Year                   : num [1:207] 2000 2001 2002 2003 2004 ...\n $ Units                  : chr [1:207] \"Mt CO2\" \"Mt CO2\" \"Mt CO2\" \"Mt CO2\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   `CO2 emissions by sector in Türkiye` = col_character(),\n  ..   Value = col_double(),\n  ..   Year = col_double(),\n  ..   Units = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\nCo2_emissions_fuel_combustion &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - CO2 emissions from fuel combustion, Türkiye (1).csv\") |&gt; rename(\"CO2 emissions from fuel combustion\" = \"CO2 emissions from fuel combustion, Türkiye\")\n\n\nRows: 23 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Units\ndbl (2): Year, CO2 emissions from fuel combustion, Türkiye\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(Co2_emissions_fuel_combustion)\n\n\nspc_tbl_ [23 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year                              : num [1:23] 2000 2001 2002 2003 2004 ...\n $ CO2 emissions from fuel combustion: num [1:23] 201 183 193 203 207 ...\n $ Units                             : chr [1:23] \"Mt CO2\" \"Mt CO2\" \"Mt CO2\" \"Mt CO2\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   `CO2 emissions from fuel combustion, Türkiye` = col_double(),\n  ..   Units = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\nCo2_emissions_per_capita &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - CO2 emissions per capita, Türkiye.csv\") |&gt; rename(\"CO2 emissions per capita\" = \"CO2 emissions per capita, Türkiye\")\n\n\nRows: 23 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Units\ndbl (2): Year, CO2 emissions per capita, Türkiye\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(Co2_emissions_per_capita)\n\n\nspc_tbl_ [23 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year                    : num [1:23] 2000 2001 2002 2003 2004 ...\n $ CO2 emissions per capita: num [1:23] 3.13 2.8 2.92 3.04 3.07 ...\n $ Units                   : chr [1:23] \"tCO2 / Capita\" \"tCO2 / Capita\" \"tCO2 / Capita\" \"tCO2 / Capita\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   `CO2 emissions per capita, Türkiye` = col_double(),\n  ..   Units = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\nelectricity_cons_per_capita &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - Electricity consumption per capita, Türkiye.csv\") |&gt; rename(\"electricity consumption per capita\" = \"Electricity consumption per capita, Türkiye\")\n\n\nRows: 24 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Units\ndbl (2): Year, Electricity consumption per capita, Türkiye\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(electricity_cons_per_capita)\n\n\nspc_tbl_ [24 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year                              : num [1:24] 2000 2001 2002 2003 2004 ...\n $ electricity consumption per capita: num [1:24] 1.63 1.59 1.65 1.75 1.88 ...\n $ Units                             : chr [1:24] \"MWh / Capita\" \"MWh / Capita\" \"MWh / Capita\" \"MWh / Capita\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   `Electricity consumption per capita, Türkiye` = col_double(),\n  ..   Units = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\nelectricity_final_consumption &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - electricity final consumption by sector in Türkiye.csv\") |&gt; rename(\"electricity final consumption\" = \"electricity final consumption by sector in Türkiye\") |&gt; na.omit(electricity_final_consumption)\n\n\nRows: 138 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): electricity final consumption by sector in Türkiye, Units\ndbl (2): Value, Year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(electricity_final_consumption)\n\n\ntibble [134 × 4] (S3: tbl_df/tbl/data.frame)\n $ electricity final consumption: chr [1:134] \"Industry\" \"Industry\" \"Industry\" \"Industry\" ...\n $ Value                        : num [1:134] 165920 161992 175953 193309 208951 ...\n $ Year                         : num [1:134] 2000 2001 2002 2003 2004 ...\n $ Units                        : chr [1:134] \"TJ\" \"TJ\" \"TJ\" \"TJ\" ...\n - attr(*, \"na.action\")= 'omit' Named int [1:4] 116 117 118 119\n  ..- attr(*, \"names\")= chr [1:4] \"116\" \"117\" \"118\" \"119\"\n\n\nCode\nsum(is.na(electricity_final_consumption))\n\n\n[1] 0\n\n\n\n\nCode\nelectricity_generation_sources &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - electricity generation sources in Türkiye.csv\") |&gt; rename(\"electricity generation sources\" = \"electricity generation sources in Türkiye\") |&gt; na.omit(electricity_generation_sources)\n\n\nRows: 240 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): electricity generation sources in Türkiye, Units\ndbl (2): Value, Year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(electricity_generation_sources)\n\n\ntibble [226 × 4] (S3: tbl_df/tbl/data.frame)\n $ electricity generation sources: chr [1:226] \"Coal\" \"Coal\" \"Coal\" \"Coal\" ...\n $ Value                         : num [1:226] 38187 38416 32149 32252 34448 ...\n $ Year                          : num [1:226] 2000 2001 2002 2003 2004 ...\n $ Units                         : chr [1:226] \"GWh\" \"GWh\" \"GWh\" \"GWh\" ...\n - attr(*, \"na.action\")= 'omit' Named int [1:14] 169 170 171 172 173 174 175 176 177 178 ...\n  ..- attr(*, \"names\")= chr [1:14] \"169\" \"170\" \"171\" \"172\" ...\n\n\n\n\nCode\nrenewables &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - Renewables share of electricity generation, Türkiye.csv\") |&gt; rename(\"renewables share of electricity generation\" = \"Renewables share of electricity generation, Türkiye\")\n\n\nRows: 23 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Units\ndbl (2): Year, Renewables share of electricity generation, Türkiye\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(renewables)\n\n\nspc_tbl_ [23 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year                                      : num [1:23] 2000 2001 2002 2003 2004 ...\n $ renewables share of electricity generation: num [1:23] 24.9 19.8 26.2 25.3 30.7 24.5 25.3 19 17.3 19.6 ...\n $ Units                                     : chr [1:23] \"%\" \"%\" \"%\" \"%\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   `Renewables share of electricity generation, Türkiye` = col_double(),\n  ..   Units = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\nmodern_renewables &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - Share of modern renewables in final energy consumption (SDG 7.2), Türkiye (1).csv\") |&gt; rename(\"modern renewables\" = \"Share of modern renewables in final energy consumption (SDG 7.2), Türkiye\")\n\n\nRows: 22 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Units\ndbl (2): Year, Share of modern renewables in final energy consumption (SDG 7...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(modern_renewables)\n\n\nspc_tbl_ [22 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year             : num [1:22] 2000 2001 2002 2003 2004 ...\n $ modern renewables: num [1:22] 17.3 18.1 17.5 16.3 16.8 ...\n $ Units            : chr [1:22] \"%\" \"%\" \"%\" \"%\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   `Share of modern renewables in final energy consumption (SDG 7.2), Türkiye` = col_double(),\n  ..   Units = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\nelectricity_production &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - Total electricity production, Türkiye.csv\") |&gt; rename(\"total electricity production\" = \"Total electricity production, Türkiye\")\n\n\nRows: 24 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Units\ndbl (2): Year, Total electricity production, Türkiye\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(electricity_production)\n\n\nspc_tbl_ [24 × 3] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Year                        : num [1:24] 2000 2001 2002 2003 2004 ...\n $ total electricity production: num [1:24] 124922 122725 129400 140581 150698 ...\n $ Units                       : chr [1:24] \"GWh\" \"GWh\" \"GWh\" \"GWh\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Year = col_double(),\n  ..   `Total electricity production, Türkiye` = col_double(),\n  ..   Units = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\ntotal_energy_supply &lt;- read_csv(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/International Energy Agency - total energy supply in Türkiye (2).csv\") |&gt; \n  rename(\"total energy supply\" = \"total energy supply in Türkiye\")\n\n\nRows: 144 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): total energy supply in Türkiye, Units\ndbl (2): Value, Year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstr(total_energy_supply)\n\n\nspc_tbl_ [144 × 4] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ total energy supply: chr [1:144] \"Coal\" \"Coal\" \"Coal\" \"Coal\" ...\n $ Value              : num [1:144] 956056 789821 820271 923904 930636 ...\n $ Year               : num [1:144] 2000 2001 2002 2003 2004 ...\n $ Units              : chr [1:144] \"TJ\" \"TJ\" \"TJ\" \"TJ\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   `total energy supply in Türkiye` = col_character(),\n  ..   Value = col_double(),\n  ..   Year = col_double(),\n  ..   Units = col_character()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\nCode\ngdp_per_capita &lt;- read_excel(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/gdp_per_capita.xlsx\")  \n  \ngdp_per_capita &lt;- gdp_per_capita |&gt; select(-ncol(gdp_per_capita),-(ncol(gdp_per_capita)-1)\n  )\n\nstr(gdp_per_capita)\n\n\ntibble [27 × 4] (S3: tbl_df/tbl/data.frame)\n $ Year               : chr [1:27] \"1998\" \"1999\" \"2000\" \"2001\" ...\n $ mid_year_population: num [1:27] 62464 63364 64269 65166 66003 ...\n $ Value (TRY)        : num [1:27] 1152 1695 2668 3794 5486 ...\n $ change_rate_try    : chr [1:27] \"-\" \"47.125712213558103\" \"57.467281288589533\" \"42.198751767167977\" ...\n\n\n\n\nCode\nemissions_by_sector &lt;- read_excel(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/sektorlere gore toplam sera gazi emisyonlari (co2 esdegeri) (1).xlsx\")  \n  \nemissions_by_sector &lt;- emissions_by_sector |&gt; select(-3)\n  \n\nstr(emissions_by_sector)\n\n\ntibble [34 × 6] (S3: tbl_df/tbl/data.frame)\n $ Year                                : num [1:34] 1990 1991 1992 1993 1994 ...\n $ Total                               : num [1:34] 228 236 242 250 243 ...\n $ Energy                              : num [1:34] 143 148 154 160 157 ...\n $ Industrial processes and product use: num [1:34] 23.1 24.9 24.6 25.1 24.5 ...\n $ Agriculture                         : num [1:34] 51.8 52.9 52.7 52.8 50.3 ...\n $ Waste                               : num [1:34] 10.3 10.7 11 11.3 11.7 ...\n\n\n\n\nCode\nemissions &lt;- read_excel(\"C:/Users/DELL/Documents/GitHub/emu660-spring2025-NimetSevinc/project_data/sera gazi emisyonlari (co2 esdegeri).xlsx\")  \n\nstr(emissions)\n\n\ntibble [34 × 6] (S3: tbl_df/tbl/data.frame)\n $ \nYear   : num [1:34] 1990 1991 1992 1993 1994 ...\n $ \nTotal  : num [1:34] 228 236 242 250 243 ...\n $ CO2        : num [1:34] 155 161 167 174 171 ...\n $ CH4        : num [1:34] 51.3 52.3 52.2 51.8 51.3 ...\n $ N2O        : num [1:34] 22.2 22 22.4 23.2 20.9 ...\n $ \nF-gases: num [1:34] 0.425 0.5 0.467 0.466 0.417 ...\n\n\n\n\nCode\nsave(Co2_emissions_by_sector, Co2_emissions_fuel_combustion, Co2_emissions_per_capita, electricity_cons_per_capita, electricity_final_consumption, electricity_generation_sources, renewables, modern_renewables, electricity_production, total_energy_supply,gdp_per_capita, emissions_by_sector, emissions, file=\"emissions.RData\")"
  },
  {
    "objectID": "project.html#exploratory-data-analysis",
    "href": "project.html#exploratory-data-analysis",
    "title": "Sustainability Goals in Türkiye: Energy, Emissions, and the Future",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#trend-analysis",
    "href": "project.html#trend-analysis",
    "title": "Sustainability Goals in Türkiye: Energy, Emissions, and the Future",
    "section": "3.2 Trend Analysis",
    "text": "3.2 Trend Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#model-fitting",
    "href": "project.html#model-fitting",
    "title": "Sustainability Goals in Türkiye: Energy, Emissions, and the Future",
    "section": "3.3 Model Fitting",
    "text": "3.3 Model Fitting\nxxxxxx"
  },
  {
    "objectID": "project.html#results",
    "href": "project.html#results",
    "title": "Sustainability Goals in Türkiye: Energy, Emissions, and the Future",
    "section": "3.4 Results",
    "text": "3.4 Results\nxxxxxx"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Spring 2024-2025] EMU660 Decision Making with Analytics course.\nPlease use left menu to navigate through my assignments.\n\n\n\n Back to top",
    "crumbs": [
      "My Assignments"
    ]
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nTRMOTOR Power Systems, Quality Engineer, 2021-2024"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nKompen, Production Planning Engineering, 2018\nKoneks, Project Management, 2019"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "This page is under construction.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/assignments/assignment-1.html",
    "href": "docs/assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts."
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment has three parts.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#b-statistical-summaries-with-custom-functions-and-iteration-methods",
    "href": "assignments/assignment-1.html#b-statistical-summaries-with-custom-functions-and-iteration-methods",
    "title": "Assignment 1",
    "section": "(b) Statistical Summaries with Custom Functions and Iteration Methods",
    "text": "(b) Statistical Summaries with Custom Functions and Iteration Methods\n\n\n\ndata(mtcars)\n\ncompute_stats &lt;- function(x) {\n  list&lt;- (c(mean = mean(x), median = median(x), var = var(x), IQR = IQR(x), min = min(x), max = max(x)))\n}\nfor (col in names(mtcars)) {\n  cat(\"Column_name:\", col, \"\\n\")\n  print(compute_stats(mtcars[[col]]))\n}\n\nColumn_name: mpg \n    mean   median      var      IQR      min      max \n20.09062 19.20000 36.32410  7.37500 10.40000 33.90000 \nColumn_name: cyl \n    mean   median      var      IQR      min      max \n6.187500 6.000000 3.189516 4.000000 4.000000 8.000000 \nColumn_name: disp \n      mean     median        var        IQR        min        max \n  230.7219   196.3000 15360.7998   205.1750    71.1000   472.0000 \nColumn_name: hp \n     mean    median       var       IQR       min       max \n 146.6875  123.0000 4700.8669   83.5000   52.0000  335.0000 \nColumn_name: drat \n     mean    median       var       IQR       min       max \n3.5965625 3.6950000 0.2858814 0.8400000 2.7600000 4.9300000 \nColumn_name: wt \n    mean   median      var      IQR      min      max \n3.217250 3.325000 0.957379 1.028750 1.513000 5.424000 \nColumn_name: qsec \n     mean    median       var       IQR       min       max \n17.848750 17.710000  3.193166  2.007500 14.500000 22.900000 \nColumn_name: vs \n     mean    median       var       IQR       min       max \n0.4375000 0.0000000 0.2540323 1.0000000 0.0000000 1.0000000 \nColumn_name: am \n     mean    median       var       IQR       min       max \n0.4062500 0.0000000 0.2489919 1.0000000 0.0000000 1.0000000 \nColumn_name: gear \n     mean    median       var       IQR       min       max \n3.6875000 4.0000000 0.5443548 1.0000000 3.0000000 5.0000000 \nColumn_name: carb \n    mean   median      var      IQR      min      max \n2.812500 2.000000 2.608871 2.000000 1.000000 8.000000 \n\n\n\n#Alternative approach with \"sapply\"\nsapply(mtcars,compute_stats)\n\n            mpg      cyl       disp        hp      drat       wt      qsec\nmean   20.09062 6.187500   230.7219  146.6875 3.5965625 3.217250 17.848750\nmedian 19.20000 6.000000   196.3000  123.0000 3.6950000 3.325000 17.710000\nvar    36.32410 3.189516 15360.7998 4700.8669 0.2858814 0.957379  3.193166\nIQR     7.37500 4.000000   205.1750   83.5000 0.8400000 1.028750  2.007500\nmin    10.40000 4.000000    71.1000   52.0000 2.7600000 1.513000 14.500000\nmax    33.90000 8.000000   472.0000  335.0000 4.9300000 5.424000 22.900000\n              vs        am      gear     carb\nmean   0.4375000 0.4062500 3.6875000 2.812500\nmedian 0.0000000 0.0000000 4.0000000 2.000000\nvar    0.2540323 0.2489919 0.5443548 2.608871\nIQR    1.0000000 1.0000000 1.0000000 2.000000\nmin    0.0000000 0.0000000 3.0000000 1.000000\nmax    1.0000000 1.0000000 5.0000000 8.000000\n\n\n\n#Alternative approach with \"apply\"\napply(mtcars,MARGIN=2,FUN=compute_stats)\n\n            mpg      cyl       disp        hp      drat       wt      qsec\nmean   20.09062 6.187500   230.7219  146.6875 3.5965625 3.217250 17.848750\nmedian 19.20000 6.000000   196.3000  123.0000 3.6950000 3.325000 17.710000\nvar    36.32410 3.189516 15360.7998 4700.8669 0.2858814 0.957379  3.193166\nIQR     7.37500 4.000000   205.1750   83.5000 0.8400000 1.028750  2.007500\nmin    10.40000 4.000000    71.1000   52.0000 2.7600000 1.513000 14.500000\nmax    33.90000 8.000000   472.0000  335.0000 4.9300000 5.424000 22.900000\n              vs        am      gear     carb\nmean   0.4375000 0.4062500 3.6875000 2.812500\nmedian 0.0000000 0.0000000 4.0000000 2.000000\nvar    0.2540323 0.2489919 0.5443548 2.608871\nIQR    1.0000000 1.0000000 1.0000000 2.000000\nmin    0.0000000 0.0000000 3.0000000 1.000000\nmax    1.0000000 1.0000000 5.0000000 8.000000",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#c-displaying-and-handling-the-na_example-dataset",
    "href": "assignments/assignment-1.html#c-displaying-and-handling-the-na_example-dataset",
    "title": "Assignment 1",
    "section": "(c) Displaying and Handling the “na_example” Dataset",
    "text": "(c) Displaying and Handling the “na_example” Dataset\n\nlibrary(dslabs)\n\nWarning: package 'dslabs' was built under R version 4.4.3\n\ndata(na_example)\n\n\nstr(na_example)\n\n int [1:1000] 2 1 3 2 1 3 1 4 3 2 ...\n\n\n\nNA_count &lt;- sum(is.na(na_example))\ncat(\"Total Number of NAs:\", NA_count)\n\nTotal Number of NAs: 145\n\nNA_index_pos &lt;- which(is.na(na_example))\ncat(\"Index positions of NAs:\", NA_index_pos) \n\nIndex positions of NAs: 12 17 27 50 51 52 59 65 66 68 91 117 125 126 127 128 139 140 141 142 153 158 168 169 172 179 189 190 203 205 207 208 212 214 237 241 243 244 253 257 265 267 269 279 282 287 290 298 310 325 326 330 341 348 361 374 392 395 397 407 410 437 443 446 461 468 470 490 496 505 527 536 539 553 561 576 578 589 599 603 609 616 618 620 630 633 636 641 652 653 666 667 668 677 680 687 691 695 701 726 734 735 736 745 746 747 748 751 756 762 767 788 789 807 821 826 832 838 843 844 845 849 850 853 859 869 887 892 893 906 909 911 918 924 925 939 943 950 962 965 966 968 979 990 999\n\n\n\ncat(\"Mean:\", mean(na_example,na.rm=TRUE), \"Std_dev:\", sd(na_example,na.rm=TRUE))\n\nMean: 2.301754 Std_dev: 1.22338\n\n\n\nreplace_median &lt;- ifelse(is.na(na_example), median(na_example, na.rm = TRUE), na_example)\ncat(\"version 1 (replaced with median):\",\"\\n\",\"Mean:\", mean(replace_median), \"Std_dev:\", sd(replace_median))\n\nversion 1 (replaced with median): \n Mean: 2.258 Std_dev: 1.136102\n\n\n\nreplace_random&lt;- ifelse(is.na(na_example), sample(na_example[!is.na(na_example)],replace = TRUE), na_example)\ncat(\"version 2 (replaced with random_v):\",\"\\n\",\"Mean:\", mean(replace_random),\"Std_dev:\", sd(replace_random))\n\nversion 2 (replaced with random_v): \n Mean: 2.3 Std_dev: 1.222086\n\n\nThe median replacement method is better because it is not affected by outliers and keeps the dataset stable. Random replacement adds variability, which can distort the data.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#a-a-brief-summary-about-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---cem-vardarerdi-daşdemir",
    "href": "assignments/assignment-1.html#a-a-brief-summary-about-veri-bilimi-ve-endüstri-mühendisliği-üzerine-sohbetler---cem-vardarerdi-daşdemir",
    "title": "Assignment 1",
    "section": "(a) A Brief Summary about “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler - Cem Vardar&Erdi Daşdemir”",
    "text": "(a) A Brief Summary about “Veri Bilimi ve Endüstri Mühendisliği Üzerine Sohbetler - Cem Vardar&Erdi Daşdemir”\nCem Vardar mentioned the role of industrial engineering in problem-solving processes within complex systems, emphasizing that even complex problems can be solved by starting from simple ones. He stated that data science is a tool in problem-solving, particularly used in improving complex systems. He highlighted the importance of soft skills such as analytical thinking, problem-solving, curiosity, and the ability to establish cause-and-effect relationships. As for technical skills, he stated that probability, statistics, programming, data collection, processing, and visualization are fundamental, and the ability to model develops when it is specialized in the business context.\nLastly, he emphasized the importance of learning general skills such as problem-solving, working with data, understanding data, taking a holistic approach, thinking multidimensionally, and having the ability to learn. He suggested focusing on the problem rather than the tools, the significance of mental models, the Pareto principle, approaching problems through inversion, understanding game theory, and the value of readings.",
    "crumbs": [
      "Assignment 1"
    ]
  }
]